<?php

namespace App\Controller;

use App\Entity\Commande;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

/*
 * --------------------------------------------------------
 * GENERALITES
 * --------------------------------------------------------
 *
 * Formulaire d'edition de commande "step 1"
 *      - Redirection vers : page précédente / validation (shipping + paiement)
 * Formulaire de validation de commande "step 2"
 *      - Redirection vers index
 *
*/

class CommandeController extends AbstractController
{
    use HelperTrait;

    /**
     * Formulaire pour créer un article
     * @Route("/creer-un-article", name="article_add")
     */
    public function addCommand(Request $request)
    {
        // Création d'un nouvel article
        $commande = new Commande();

        // Récupération des catégories
        $categories = $this->getDoctrine()
            ->getRepository(Categorie::class)
            ->findAll();

        // Récupération d'un auteur
        $membre = $this->getDoctrine()
            ->getRepository(Membre::class)
            ->find(1);

        // Affecter un auteur à l'article
        $article->setMembre($membre);

        // Création d'un formulaire permettant d'ajouter un article
        $form = $this->createForm(ArticleFormType::class,$article);

        // Traitement des données POST
        $form->handleRequest($request);
        // Si le formulaire est soumis et valide
        if ($form->isSubmitted() && $form->isValid()) {

            //1. Traitement de l'upload de l'image
                // $file stores the uploaded PDF file
                /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
                $file = $form['featuredImage']->getData();

                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

                // Move the file to the directory where featuredImage are stored
                try {
                    $file->move(
                        $this->getParameter('featuredImage_directory'),
                        $fileName
                    );
                } catch (FileException $e) {
                    // ... handle exception if something happens during file upload
                }

                // updates the 'article' property to store the PDF file name
                // instead of its contents
                $article->setFeaturedImage($fileName);

            //2. Génération du Slug
            $article->setSlug($this->slugify($article->getTitre()));

            //3. Sauvegarde en BDD
            $em=$this->getDoctrine()->getManager();
            $em->persist($article);
            $em->flush();

            //4. Notification
            $this->addFlash('notice',
                'Félicitations votre article est en ligne !');

            //5. Redirection
            return $this->redirectToRoute('default_article',[
                'categorie' => $article->getCategorie()->getSlug(),
                'slug' => $article->getSlug(),
                'id' => $article->getId()]);
        }

        // Affichage du formulaire dans la vue
        return $this->render("article/step1form.html.twig", [
            'form' => $form->createView()
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

}
